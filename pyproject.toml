[project]
name = "imreg_dft"
version = "2.0.1a"
description = "Image registration utility using algorithms based on discrete Fourier transform (DFT, FFT)"
authors = [
  { name = "Matěj Týč", email = "matej.tyc@gmail.com" },
  { name = "Jannik Schäfer", email = "jannik.schaefer@inbox-online.de" },
]
readme = "README.md"
license = "BSD-3-Clause"
keywords = ["image", "registration", "2d", "fft"]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: BSD License",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering :: Image Recognition",
  "Operating System :: OS Independent",
  "Natural Language :: English",
]

# Minimum dependencies to work with Python 3.10.
dependencies = [
  "numpy>=1.21.2",
  "scipy>=1.7.2",
  "pillow",
  "imageio",
  "typing-extensions",
]

[project.optional-dependencies]
better_performance = ["pyfftw>=0.13.0"]
plotting = ["matplotlib"]

[project.urls]
Documentation = "https://github.com/jnk22/imreg_dft#readme"
Issues = "https://github.com/jnk22/imreg_dft/issues"
Source = "https://github.com/jnk22/imreg_dft"

[project.scripts]
ird = 'imreg_dft.cli:main'
ird-tform = 'imreg_dft.tform:main'
ird-show = 'imreg_dft.show:main'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
managed = true
default-groups = ["dev", "test", "lint"]

[dependency-groups]
dev = [
  "pyfftw>=0.13.0",
  "matplotlib",
]
test = [
  "pytest==8.3.5",
  "pytest-cov==6.1.1",
  "pytest-xdist==3.6.1",
  "tox-uv==1.25.0",
  "hypothesis==6.131.9",
]
lint = [
  "ruff==0.11.7",
  "mypy==1.15.0",
  "pyright==1.1.400",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov-config=pyproject.toml --doctest-modules --strict-markers"

[tool.coverage.report]
exclude_lines = ["if (typing\\.)?TYPE_CHECKING:"]

[tool.coverage.run]
branch = true
source = ["imreg_dft"]

[tool.tox]
skipsdist = true
env_list = ["3.10", "3.11", "3.12", "3.13"]

[tool.tox.env_run_base]
passenv = ["PYTHON_VERSION"]
allowlist_externals = ["uv"]
commands = [
  [
    "uv",
    "run",
    "--no-dev",
    "--group",
    "test",
    "--python",
    "{envpython}",
    "pytest",
    "--doctest-modules",
  ],
]

[tool.ruff]
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN401", # Allow 'Any' type until all arguments are properly typed
  "COM812",
  "D203",
  "D213",
  "ERA001",
  "ISC001",
  "T201",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104", "F401"]
"tests/*.py" = ["INP001", "S101"]

[tool.mypy]
ignore_missing_imports = true

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.10"
pythonPlatform = "Linux"

[tool.vulture]
paths = ["src", "tests"]
min_confidence = 90
make_whitelist = true
sort_by_size = true
